heat_template_version: 2015-04-30

description: Software Configuration with Heat.

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for the server.
    default: CentOS7-1509

  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used on the compute instance.
    default: m1.small

  private_network:
    type: string
    label: Internal network name
    description: Internal network name or ID
    default: work-net

  sec_group:
    type: string
    label: Security group name
    description: Security group name
    default: open_all

  key:
    type: string
    label: Key name
    description: Name of key-pair to be installed on the compute instance.
    default: my-key

  your_name:
    type: string

resources:
  wait_handle:
    type: OS::Heat::WaitConditionHandle

  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 1
      timeout: 600

  config_set_passwd:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        password: password
        chpasswd: { expire: False }
        ssh_pwauth: True
        timezone: Asia/Tokyo

  config_set_string:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          params:
            __heat_your_name: { get_param: your_name }
          template: |
            #!/bin/bash -ex
            echo "__heat_your_name" >> /your_name.txt

  config_send_notify_after_settings:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          params:
            __heat_wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/bash -ex
            __heat_wc_notify --data-binary '{"status": "SUCCESS"}'

  server_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: { get_resource: config_set_passwd }
      - config: { get_resource: config_set_string }
      - config: { get_resource: config_send_notify_after_settings }

  instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      security_groups:
        - { get_param: sec_group }
      networks:
        - network: { get_param: private_network }
      user_data_format: RAW
      user_data: { get_resource: server_init }

outputs:
  instance_name:
    description: Name of the instance
    value: { get_attr: [instance, name] }
  instance_ip:
    description: The IP address of the deployed instance
    value: { get_attr: [ instance, first_address ] }
