heat_template_version: 2018-08-31

description: 5th Hands-on Environment

parameters:
  public_network:
    type: string
    label: Public network name or ID
    description: Public network with floating IP addresses.
    default: public

  private_network:
    type: string
    label: Internal network name
    description: Internal network name or ID
    default: work-net

  sec_group:
    type: string
    label: Security group name
    description: Security group name
    default: open-all

  key:
    type: string
    label: Key name
    description: Name of key-pair to be installed on the compute instance.
    default: my-key

  ip1:
    type: string
    default: 192.168.199.30

resources:
  wait_handle:
    type: OS::Heat::WaitConditionHandle

  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 2
      timeout: 1200

  key_pair:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: key }
      save_private_key: true

  neutron-port1:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_network }
      fixed_ips:
        - ip_address: { get_param: ip1 }
      security_groups:
        - { get_param: sec_group }

  passwd:
    type: OS::Heat::RandomString
    properties:
      length: 5
      sequence: lettersdigits

  config_set_passwd:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        password: { get_attr: [passwd, value] }
        chpasswd: { expire: False }
        ssh_pwauth: True
        timezone: Asia/Tokyo

  config_send_notify_after_settings:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          params:
            __heat_wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/bash -ex
            __heat_wc_notify --data-binary '{"status": "SUCCESS"}'
            reboot

  server_init1:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: { get_resource: config_set_passwd }
      - config: { get_resource: config_send_notify_after_settings }

  instance1:
    type: OS::Nova::Server
    properties:
      name: handson5-virt
      image: CentOS8-virt
      flavor: m1.large
      key_name: { get_resource: key_pair }
      networks:
        - port: { get_resource: neutron-port1 }
      user_data_format: RAW
      user_data: { get_resource: server_init1 }

outputs:
  instance1:
    description: server information
    value:
      name: { get_attr: [ instance1, name ] }
      ip_address: { get_attr: [ neutron-port1, fixed_ips, 0, ip_address ] }
  password:
    description: server password for user "centos"
    value: { get_attr: [ passwd, value] }
  private_key:
    description: private key for user "centos"
    value: { get_attr: [ key_pair, private_key ] }
