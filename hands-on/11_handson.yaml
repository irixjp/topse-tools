heat_template_version: 2018-08-31

description: 11th Hands-on Environment

parameters:
  password:
    type: string
    label: Server password
    description: You set your password on your instances.
    default: password

resources:
  wait_handle:
    type: OS::Heat::WaitConditionHandle

  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 6
      timeout: 1800

  wait_handle_after_reboot:
    type: OS::Heat::WaitConditionHandle

  wait_condition_after_reboot:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle_after_reboot }
      count: 3
      timeout: 1800

  key_pair:
    type: OS::Nova::KeyPair
    properties:
      name: handson11-key
      save_private_key: true

  floating_network:
    type: OS::Neutron::Net
    properties:
      name: floating-net

  floating_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: floating-subnet
      ip_version: 4
      network_id: { get_resource: floating_network }
      cidr: 172.16.100.0/24
      gateway_ip: 172.16.100.254
      enable_dhcp: False

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router: Ext-Router
      subnet: { get_resource: floating_subnet }

  neutron_port_cc_eth0:
    type: OS::Neutron::Port
    properties:
      network: work-net
      fixed_ips:
        - ip_address: 192.168.199.200
      security_groups:
        - open-all

  neutron_port_cc_eth1:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: floating_network }
      fixed_ips:
        - ip_address: 172.16.100.200
        - ip_address: 172.16.100.201
        - ip_address: 172.16.100.202
        - ip_address: 172.16.100.203
        - ip_address: 172.16.100.204
      security_groups:
        - open-all

  neutron_port_node1_eth0:
    type: OS::Neutron::Port
    properties:
      network: work-net
      fixed_ips:
        - ip_address: 192.168.199.201
      security_groups:
        - open-all

  neutron_port_node2_eth0:
    type: OS::Neutron::Port
    properties:
      network: work-net
      fixed_ips:
        - ip_address: 192.168.199.202
      security_groups:
        - open-all

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: public

  floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: { get_resource: neutron_port_cc_eth0 }

  config_set_passwd:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        password: { get_param: password }
        chpasswd: { expire: False }
        ssh_pwauth: True
        timezone: Asia/Tokyo

  config_send_notify:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          params:
            __heat_wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/bash -ex
            __heat_wc_notify --data-binary '{"status": "SUCCESS"}'

  server_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: { get_resource: config_set_passwd }
      - config: { get_resource: config_send_notify }

  instance_openstack_cc:
    type: OS::Nova::Server
    properties:
      name: handson11-openstack-cc
      image: CentOS7
      flavor: m1.large
      key_name: { get_resource: key_pair }
      networks:
        - port: { get_resource: neutron_port_cc_eth0 }
        - port: { get_resource: neutron_port_cc_eth1 }
      user_data_format: RAW
      user_data: { get_resource: server_init }

  instance_openstack_node1:
    type: OS::Nova::Server
    properties:
      name: handson11-openstack-node1
      image: CentOS7
      flavor: m1.large
      key_name: { get_resource: key_pair }
      networks:
        - port: { get_resource: neutron_port_node1_eth0 }
      user_data_format: RAW
      user_data: { get_resource: server_init }

  instance_openstack_node2:
    type: OS::Nova::Server
    properties:
      name: handson11-openstack-node2
      image: CentOS7
      flavor: m1.large
      key_name: { get_resource: key_pair }
      networks:
        - port: { get_resource: neutron_port_node2_eth0 }
      user_data_format: RAW
      user_data: { get_resource: server_init }

outputs:
  instance1:
    description: server information
    value:
      name: { get_attr: [ instance_openstack_cc, name ] }
      ip_address: { get_attr: [ neutron_port_cc_eth0, fixed_ips, 0, ip_address ] }
      floating_ip: { get_attr: [floating_ip, floating_ip_address] }

  instance2:
    description: server information
    value:
      name: { get_attr: [ instance_openstack_node1, name ] }
      ip_address: { get_attr: [ neutron_port_node1_eth0, fixed_ips, 0, ip_address ] }
      floating_ip: ""

  instance3:
    description: server information
    value:
      name: { get_attr: [ instance_openstack_node2, name ] }
      ip_address: { get_attr: [ neutron_port_node2_eth0, fixed_ips, 0, ip_address ] }
      floating_ip: ""

  password:
    description: server password for user "centos"
    value: { get_param: password }

  private_key:
    description: private key for user "centos"
    value: { get_attr: [ key_pair, private_key ] }
