heat_template_version: 2018-08-31

description: 9th Hands-on Environment

parameters:
  password:
    type: string
    label: Server password
    description: You set your password on your instances.
    default: password

resources:
  wait_handle:
    type: OS::Heat::WaitConditionHandle

  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 3
      timeout: 1800

  wait_handle_after_reboot:
    type: OS::Heat::WaitConditionHandle

  wait_condition_after_reboot:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle_after_reboot }
      count: 1
      timeout: 1800

  key_pair:
    type: OS::Nova::KeyPair
    properties:
      name: handson9-key
      save_private_key: true

  management_network:
    type: OS::Neutron::Net
    properties:
      name: management

  internal_network:
    type: OS::Neutron::Net
    properties:
      name: internal

  external_network:
    type: OS::Neutron::Net
    properties:
      name: external

  management_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: management-subnet
      ip_version: 4
      network_id: { get_resource: management_network }
      cidr: 10.10.10.0/24
      gateway_ip: 10.10.10.254
      enable_dhcp: True

  internal_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: internal-subnet
      ip_version: 4
      network_id: { get_resource: internal_network }
      cidr: 10.20.20.0/24
      gateway_ip: ""
      enable_dhcp: True

  external_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: external-subnet
      ip_version: 4
      network_id: { get_resource: external_network }
      cidr: 10.30.30.0/24
      gateway_ip: 10.30.30.254
      enable_dhcp: False

  router_interface_management:
    type: OS::Neutron::RouterInterface
    properties:
      router: Ext-Router
      subnet: { get_resource: management_subnet }

  router_interface_external:
    type: OS::Neutron::RouterInterface
    properties:
      router: Ext-Router
      subnet: { get_resource: external_subnet }

  neutron_port_os_eth0:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: management_network }
      fixed_ips:
        - ip_address: 10.10.10.100
      security_groups:
        - open-all

  neutron_port_os_eth1:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: internal_network }
      fixed_ips:
        - ip_address: 10.20.20.100
      security_groups:
        - open-all

  neutron_port_os_eth2:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: external_network }
      fixed_ips:
        - ip_address: 10.30.30.100
      security_groups:
        - open-all

  config_set_passwd:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        password: { get_param: password }
        chpasswd: { expire: False }
        ssh_pwauth: True
        timezone: Asia/Tokyo

  config_send_notify:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          params:
            $__heat_wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/bash -ex
            $__heat_wc_notify --data-binary '{"status": "SUCCESS"}'

  config_send_notify_after_reboot:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          params:
            $__heat_wc_notify: { get_attr: ['wait_handle_after_reboot', 'curl_cli'] }
          template: |
            #!/bin/bash -ex
            cat << EOF >> /etc/rc.d/rc.local
            $__heat_wc_notify --data-binary '{"status": "SUCCESS"}'
            EOF
            chmod u+x /etc/rc.d/rc.local

  config_reboot:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash -ex
        reboot

  config_pre_openstack:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash -ex
        echo "PermitRootLogin yes" >> /etc/ssh/sshd_config
        sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
        mkdir -p /root/.ssh
        chmod 700 /root/.ssh
        rm -f /root/.ssh/authorized_keys
        cp /home/centos/.ssh/authorized_keys /root/.ssh/authorized_keys
        chmod 600 /root/.ssh/authorized_keys
        systemctl restart sshd

        ifdown eth0
        ifdown eth1
        ifdown eth2

        cat << EOF > /etc/sysconfig/network-scripts/ifcfg-eth0
        DEVICE=eth0
        TYPE=Ethernet
        ONBOOT=yes
        BOOTPROTO=dhcp
        EOF

        cat << EOF > /etc/sysconfig/network-scripts/ifcfg-eth1
        DEVICE=eth1
        TYPE=Ethernet
        ONBOOT=yes
        BOOTPROTO=dhcp
        EOF

        cat << EOF > /etc/sysconfig/network-scripts/ifcfg-eth2
        DEVICE=eth2
        TYPE=Etherne
        ONBOOT=yes
        BOOTPROTO=none
        EOF

        ifup eth0
        ifup eth1
        ifup eth2
        sleep 10

  config_packstack:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash -ex
        dnf install -y openstack-packstack
        export HOME=/root
        packstack --dry-run --allinone --default-password=password --provision-demo=n --gen-answer-file /root/openstack-answer.txt

        crudini --set /root/openstack-answer.txt general CONFIG_NOVA_INSTALL y
        crudini --set /root/openstack-answer.txt general CONFIG_GLANCE_INSTALL y
        crudini --set /root/openstack-answer.txt general CONFIG_CINDER_INSTALL y
        crudini --set /root/openstack-answer.txt general CONFIG_NEUTRON_INSTALL y
        crudini --set /root/openstack-answer.txt general CONFIG_HORIZON_INSTALL y
        crudini --set /root/openstack-answer.txt general CONFIG_SWIFT_INSTALL y
        crudini --set /root/openstack-answer.txt general CONFIG_HEAT_INSTALL n
        crudini --set /root/openstack-answer.txt general CONFIG_HEAT_CFN_INSTALL n
        crudini --set /root/openstack-answer.txt general CONFIG_AODH_INSTALL n
        crudini --set /root/openstack-answer.txt general CONFIG_CEILOMETER_INSTALL n
        crudini --set /root/openstack-answer.txt general CONFIG_PROVISION_DEMO n
        crudini --set /root/openstack-answer.txt general CONFIG_NEUTRON_METERING_AGENT_INSTALL n
        crudini --set /root/openstack-answer.txt general CONFIG_NEUTRON_OVN_BRIDGE_MAPPINGS extnet:br-ex
        crudini --set /root/openstack-answer.txt general CONFIG_NEUTRON_OVN_EXTERNAL_PHYSNET extnet
        crudini --set /root/openstack-answer.txt general CONFIG_NEUTRON_OVN_BRIDGE_IFACES br-ex:eth2
        crudini --set /root/openstack-answer.txt general CONFIG_NEUTRON_OVN_TUNNEL_IF eth1
        crudini --set /root/openstack-answer.txt general CONFIG_NEUTRON_OVN_TUNNEL_SUBNETS 10.20.20.0/24
        crudini --set /root/openstack-answer.txt general CONFIG_CINDER_VOLUMES_SIZE 20G
        crudini --set /root/openstack-answer.txt general CONFIG_SWIFT_STORAGE_SIZE 5G

        time packstack --answer-file /root/openstack-answer.txt

  config_after_openstack:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash -ex
        crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 path_mtu 1400
        crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_geneve vni_ranges 10:100
        crudini --set /etc/cinder/cinder.conf lvm volume_clear none

        echo "*         hard    nofile      600000" >> /etc/security/limits.conf
        echo "*         soft    nofile      600000" >> /etc/security/limits.conf
        echo "root      hard    nofile      600000" >> /etc/security/limits.conf
        echo "root      soft    nofile      600000" >> /etc/security/limits.conf
        echo "# End of file" >> /etc/security/limits.conf

        mkdir /etc/systemd/system/mariadb.service.d/
        crudini --set /etc/systemd/system/mariadb.service.d/limits.conf Service LimitNOFILE 600000
        systemctl daemon-reload
        systemctl restart mariadb

        crudini --set /etc/nova/nova.conf libvirt virt_type kvm
        crudini --set /etc/nova/nova.conf libvirt cpu_mode host-passthrough
        crudini --set /etc/nova/nova.conf vnc enabled true
        crudini --set /etc/nova/nova.conf vnc novncproxy_base_url http://10.10.10.100:6080/vnc_auto.html
        crudini --set /etc/nova/nova.conf vnc server_listen 0.0.0.0
        crudini --set /etc/nova/nova.conf vnc keymap ja
        crudini --set /etc/nova/nova.conf DEFAULT cpu_allocation_ratio 32
        crudini --set /etc/nova/nova.conf DEFAULT ram_allocation_ratio 16
        crudini --set /etc/nova/nova.conf DEFAULT disk_allocation_ratio 12
        crudini --set /etc/nova/nova.conf DEFAULT allow_resize_to_same_host true
        crudini --set /etc/nova/nova.conf vnc server_proxyclient_address 10.10.10.100
        echo "" >> /etc/nova/migration/identity

  server_init_openstack:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: { get_resource: config_set_passwd }
      - config: { get_resource: config_pre_openstack }
      - config: { get_resource: config_send_notify }
      - config: { get_resource: config_packstack }
      - config: { get_resource: config_send_notify }
      - config: { get_resource: config_after_openstack }
      - config: { get_resource: config_send_notify }
      - config: { get_resource: config_send_notify_after_reboot }
      - config: { get_resource: config_reboot }

  instance_openstack:
    type: OS::Nova::Server
    properties:
      name: handson9-openstack-single
      image: CentOS8
      flavor: m1.xlarge
      key_name: { get_resource: key_pair }
      networks:
        - port: { get_resource: neutron_port_os_eth0 }
        - port: { get_resource: neutron_port_os_eth1 }
        - port: { get_resource: neutron_port_os_eth2 }
      user_data_format: RAW
      user_data: { get_resource: server_init_openstack }

outputs:
  instance:
    description: server information
    value:
      name: { get_attr: [ instance_openstack, name ] }
      ip_address: { get_attr: [ neutron_port_os_eth0, fixed_ips, 0, ip_address ] }
  password:
    description: server password for user "centos"
    value: { get_param: password }
  private_key:
    description: private key for user "centos"
    value: { get_attr: [ key_pair, private_key ] }
