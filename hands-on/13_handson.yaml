heat_template_version: 2015-04-30

description: 13th Hands-on Environment

parameters:
  reposerver:
    type: string
    label: hands-on repository server
    description: Teahcer will gives the specific ip address.

  password:
    type: string
    label: Server password
    description: You set your password on your instances.

resources:
  key_pair:
    type: OS::Nova::KeyPair
    properties:
      name: handson13-key
      save_private_key: true

  neutron_port_console:
    type: OS::Neutron::Port
    properties:
      network: work-net
      fixed_ips:
        - ip_address: 192.168.199.10
      security_groups:
        - open-all

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: public

  floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: { get_resource: neutron_port_console }

  config_set_passwd:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        password: { get_param: password }
        chpasswd: { expire: False }
        ssh_pwauth: True
        timezone: Asia/Tokyo

  config_set_repo:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          params:
            __heat_reposerver_ip: { get_param: reposerver }
          template: |
            #!/bin/bash -ex
            echo "__heat_reposerver_ip reposerver" >> /etc/hosts
            rm -f /etc/yum.repos.d/CentOS*
            rm -f /etc/yum.repos.d/epel*
            curl -o /etc/yum.repos.d/edubase.repo http://reposerver/repo/edubase.repo
            yum clean all
            yum repolist

  config_send_notify:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          params:
            __heat_wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/bash -ex
            __heat_wc_notify --data-binary '{"status": "SUCCESS"}'

  config_send_notify_after_reboot:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          params:
            wc_notify: { get_attr: ['wait_handle_after_reboot', 'curl_cli'] }
          template: |
            #!/bin/bash -ex
            cat << EOF >> /etc/rc.d/rc.local
            wc_notify --data-binary '{"status": "SUCCESS"}'
            EOF
            chmod u+x /etc/rc.d/rc.local

  config_reboot:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash -ex
        reboot

  config_consle:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        str_replace:
          params:
            $_private_key_: { get_attr: [ key_pair, private_key ] }
            $_public_key_: { get_attr: [ key_pair, public_key ] }
          template: |
            #!/bin/bash -ex
            yum install -y \
            python2-novaclient \
            python2-cinderclient \
            python2-keystoneclient \
            python2-neutronclient \
            python2-glanceclient \
            python2-swiftclient \
            python2-heatclient \
            python-openstackclient \
            jq \
            wget \
            vim \
            crudini \
            bash-completion \
            ansible \
            lynx \
            plotnetcfg \
            graphviz \
            httpd

            systemctl enable httpd
            systemctl start httpd

            wget reposerver/hands-on/openrc -O /home/centos/openrc
            chown centos:centos /home/centos/openrc
            echo "$_private_key_" > /home/centos/.ssh/id_rsa
            echo "$_public_key_" > /home/centos/.ssh/id_rsa.pub
            chown centos:centos /home/centos/.ssh/id_rsa
            chown centos:centos /home/centos/.ssh/id_rsa.pub
            chmod 600 /home/centos/.ssh/id_rsa
            chmod 644 /home/centos/.ssh/id_rsa.pub

            echo "$_private_key_" > /root/.ssh/id_rsa
            echo "$_public_key_" > /root/.ssh/id_rsa.pub
            chmod 600 /root/.ssh/id_rsa
            chmod 644 /root/.ssh/id_rsa.pub

  server_init_console:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: { get_resource: config_set_passwd }
      - config: { get_resource: config_set_repo }
      - config: { get_resource: config_consle }
      - config: { get_resource: config_send_notify }
      - config: { get_resource: config_send_notify_after_reboot }
      - config: { get_resource: config_reboot }

  instance_console:
    type: OS::Nova::Server
    properties:
      name: handson13-console
      image: CentOS7
      flavor: m1.small
      key_name: { get_resource: key_pair }
      networks:
        - port: { get_resource: neutron_port_console }
      user_data_format: RAW
      user_data: { get_resource: server_init_console }

outputs:
  instance1:
    description: server information
    value:
      name: { get_attr: [ instance_console, name ] }
      ip_address: { get_attr: [ neutron_port_console, fixed_ips, 0, ip_address ] }
      floating_ip: { get_attr: [floating_ip, floating_ip_address] }

  password:
    description: server password for user "centos"
    value: { get_param: password }

  private_key:
    description: private key for user "centos"
    value: { get_attr: [ key_pair, private_key ] }
