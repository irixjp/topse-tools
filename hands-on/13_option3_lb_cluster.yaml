heat_template_version: 2015-10-15

description: A Group of Load Balanced Servers

parameters:
  app_port:
    type: number
    default: 80
    description: Port used by the servers
  flavor:
    type: string
    default: m1.tiny
    description: Flavor used for servers
    constraints:
    - custom_constraint: nova.flavor
  image:
    type: string
    default: CentOS7
    description: Image used for servers
    constraints:
    - custom_constraint: glance.image
  lb_port:
    type: number
    default: 80
    description: Port used by the load balancer
  private_network:
    type: string
    default: work-net
    description: Network used by the servers
    constraints:
    - custom_constraint: neutron.network
  private_subnet:
    type: string
    default: work-subnet
    description: Subnet on which the load balancer will be located
    constraints:
    - custom_constraint: neutron.subnet
  public_network:
    type: string
    default: public
    description: Network used by the load balancer
    constraints:
    - custom_constraint: neutron.network
  key:
    type: string
    default: key-for-console
  cluster_size:
    type: string
    default: 3
  reposerver:
    type: string
    label: hands-on repository server
    description: Teahcer will give the specific ip address.

resources:
  sec_group:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
      - remote_ip_prefix: 0.0.0.0/0
        protocol: tcp
        port_range_min: { get_param: app_port }
        port_range_max: { get_param: app_port }
      - remote_ip_prefix: 0.0.0.0/0
        protocol: tcp
        port_range_min: 22
        port_range_max: 22

  web_cluster:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: cluster_size }
      resource_def:
        type: 13_option_single_server.yaml
        properties:
          image: { get_param: image }
          key: { get_param: key }
          flavor: { get_param: flavor }
          private_network: { get_param: private_network }
          private_subnet: { get_param: private_subnet }
          sec_group: { get_resource: sec_group }
          app_port: { get_param: app_port }
          pool: { get_resource: pool }
          reposerver: { get_param: reposerver }

  monitor:
    type: OS::Neutron::LBaaS::HealthMonitor
    properties:
      delay: 3
      type: HTTP
      timeout: 3
      max_retries: 3
      pool: { get_resource: pool }

  pool:
    type: OS::Neutron::LBaaS::Pool
    properties:
      lb_algorithm: ROUND_ROBIN
      protocol: HTTP
      listener: { get_resource: listener }

  listener:
    type: OS::Neutron::LBaaS::Listener
    properties:
      loadbalancer: { get_resource: loadbalancer }
      protocol: HTTP
      protocol_port: { get_param: lb_port }

  loadbalancer:
    type: OS::Neutron::LBaaS::LoadBalancer
    properties:
      vip_subnet: { get_param: private_subnet }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_network }
      port_id: { get_attr: [ loadbalancer, vip_port_id ]}

outputs:
  lburl:
    value:
      str_replace:
        template: http://IP_ADDRESS:PORT
        params:
          IP_ADDRESS: { get_attr: [ floating_ip, floating_ip_address ] }
          PORT: { get_param: lb_port }
    description: >
      This URL is the "external" URL that can be used to access the
      load balancer.
