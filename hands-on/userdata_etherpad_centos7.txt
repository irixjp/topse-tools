#!/bin/bash
setenforce 0
sed -i 's/^SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config

## set repogitry

mkdir -p /root/temp

echo "157.1.205.1 reposerver" >> /etc/hosts

rm -f /etc/yum.repos.d/*
curl -o /etc/yum.repos.d/edubase.repo http://reposerver/openstack/repo/centos7/edubase-kilo.repo
yum clean all
yum repolist

yum update -y
rm -f /etc/yum.repos.d/CentOS*
rm -f /etc/yum.repos.d/epel*



## Install dependency packages
yum install -y wget git crudini vim nodejs npm mariadb mariadb-server nginx


## MariaDB
crudini --set /etc/my.cnf.d/server.cnf mysqld character-set-server utf8
crudini --set /etc/my.cnf.d/client.cnf client default-character-set utf8

systemctl enable mariadb.service
systemctl start  mariadb.service

mysqladmin -u root password 'password'

cat << EOF > /tmp/sql.txt
DELETE FROM mysql.user WHERE user = '' OR ( user = 'root' AND host != 'localhost' );
FLUSH PRIVILEGES;
CREATE DATABASE epdb CHARACTER SET utf8;
GRANT ALL PRIVILEGES ON epdb.* TO 'epuser'@'%' IDENTIFIED BY 'eppasswd';
FLUSH PRIVILEGES;
SELECT user, password, host FROM mysql.user;
EOF

mysql -uroot -ppassword < /tmp/sql.txt


## Etherpad
mkdir -p /opt
useradd -d /opt/etherpad etherpad

su - etherpad -c 'git clone https://github.com/ether/etherpad-lite.git; cd etherpad-lite; git checkout -b 1.5.7 remotes/origin/release/1.5.7'
su - etherpad -c 'cd /opt/etherpad/etherpad-lite; sh bin/installDeps.sh'

cat << EOF > /usr/lib/systemd/system/etherpad.service
[Unit]
Description=Run Etherpad-lite, the collaborative editor.
After=syslog.target network.target

[Service]
Type=simple
User=etherpad
Group=etherpad
ExecStart=/opt/etherpad/etherpad-lite/bin/run.sh

[Install]
WantedBy=multi-user.target
EOF

cat << EOF > /opt/etherpad/etherpad-lite/settings.json
{
  "title": "Etherpad",
  "favicon": "favicon.ico",
  "ip": "0.0.0.0",
  "port" : 9001,
  "dbType" : "mysql",
  "dbSettings" : {
                    "user"    : "epuser",
                    "host"    : "localhost",
                    "password": "eppasswd",
                    "database": "epdb"
                 },
  "defaultPadText" : "",
  "padOptions": {
    "noColors": false,
    "showControls": true,
    "showChat": true,
    "showLineNumbers": true,
    "useMonospaceFont": true,
    "userName": false,
    "userColor": false,
    "rtl": false,
    "alwaysShowChat": false,
    "chatAndUsers": false,
    "lang": "en-gb"
  },
  "suppressErrorsInPadText" : false,
  "requireSession" : false,
  "editOnly" : false,
  "sessionNoPassword" : false,
  "minify" : true,
  "maxAge" : 21600,
  "abiword" : null,
  "tidyHtml" : null,
  "allowUnknownFileEnds" : true,
  "requireAuthentication" : false,
  "requireAuthorization" : false,
  "trustProxy" : false,
  "disableIPlogging" : false,
  "socketTransportProtocols" : ["xhr-polling", "jsonp-polling", "htmlfile"],
  "loadTest": false,
  "loglevel": "INFO",
  "logconfig" :
    { "appenders": [
        { "type": "console"
        }
      ]
    }
}
EOF

systemctl enable etherpad.service
systemctl start  etherpad.service


## Nginx

FIP=`curl -S -s http://169.254.169.254/openstack/latest/meta_data.json | python -c "import json,sys; print json.load(sys.stdin).get('meta').get('fip')"`

cat << EOF > /etc/nginx/conf.d/eplite.conf
server {
        listen       80;
        server_name  ${FIP};

        access_log  /var/log/nginx/eplite.access.log;
        error_log   /var/log/nginx/eplite.error.log;

        location / {
            proxy_pass             http://localhost:9001/;
            proxy_set_header       Host \$host;
            proxy_pass_header Server;
            proxy_buffering off;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header Host \$host;
            proxy_http_version 1.1;
            proxy_set_header Upgrade \$http_upgrade;
            proxy_set_header Connection \$connection_upgrade;

        }
}

map \$http_upgrade \$connection_upgrade {
  default upgrade;
  ''      close;
}
EOF

systemctl enable nginx.service
systemctl start  nginx.service



echo "### finish!! ###"

reboot
